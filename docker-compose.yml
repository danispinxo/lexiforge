services:
  db:
    image: postgres:14
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-lexiforge_development}
      POSTGRES_USER: ${POSTGRES_USER:-lexiforge}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-lexiforge} -d ${POSTGRES_DB:-lexiforge_development}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "${PORT:-3000}:3000"
    environment:
      RAILS_ENV: ${RAILS_ENV:-development}
      DATABASE_URL: postgres://${POSTGRES_USER:-lexiforge}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-lexiforge_development}
      BUNDLE_PATH: /usr/local/bundle
      GUTENBERG_BASE_URL: ${GUTENBERG_BASE_URL:-https://www.gutenberg.org}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3001}
      POSTGRES_DB: ${POSTGRES_DB:-lexiforge_development}
      POSTGRES_USER: ${POSTGRES_USER:-lexiforge}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - .:/rails
      - bundle_data:/usr/local/bundle
    depends_on:
      db:
        condition: service_healthy
    stdin_open: true
    tty: true
    command: >
      sh -c "rm -f tmp/pids/server.pid && 
             bundle check || bundle install && 
             ./bin/docker-entrypoint ./bin/rails server -b 0.0.0.0"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      VITE_API_BASE_URL: ${API_BASE_URL:-http://localhost:3000/api}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  bundle_data:
