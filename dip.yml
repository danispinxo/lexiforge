version: "8.0"

environment:
  RAILS_ENV: development

compose:
  files:
    - docker-compose.yml
  project_name: lexiforge

interaction:
  rails:
    description: Run Rails commands
    service: api
    command: ./bin/rails
    environment:
      DB_HOST: db
      DB_PORT: 5432
      POSTGRES_DB: lexiforge_development
      POSTGRES_USER: ${POSTGRES_USER:-lexiforge}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    compose:
      run_options: [no-deps]

  rake:
    description: Run Rake commands
    service: api
    command: ./bin/rake
    environment:
      DB_HOST: db
      DB_PORT: 5432
      POSTGRES_DB: lexiforge_development
      POSTGRES_USER: ${POSTGRES_USER:-lexiforge}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    compose:
      run_options: [no-deps]

  bundle:
    description: Run Bundle commands
    service: api
    command: bundle
    compose:
      run_options: [no-deps]

  rspec:
    description: Run RSpec tests
    service: api
    command: bundle exec rspec
    compose:
      run_options: [no-deps]
    environment:
      RAILS_ENV: test
      TEST_DB_HOST: db_test
      TEST_DB_PORT: 5432
      TEST_DB_NAME: lexiforge_test
      TEST_DB_USER: ${POSTGRES_USER:-lexiforge}
      TEST_DB_PASSWORD: ${POSTGRES_PASSWORD:-password}

  test-setup:
    description: Setup test database
    service: api
    command: sh -c "RAILS_ENV=test ./bin/rails db:environment:set && RAILS_ENV=test ./bin/rails db:prepare"
    environment:
      RAILS_ENV: test
      TEST_DB_HOST: db_test
      TEST_DB_PORT: 5432
      TEST_DB_NAME: lexiforge_test
      TEST_DB_USER: ${POSTGRES_USER:-lexiforge}
      TEST_DB_PASSWORD: ${POSTGRES_PASSWORD:-password}
      DB_HOST: db_test
      DB_PORT: 5432
      POSTGRES_DB: lexiforge_test

  rubocop:
    description: Run RuboCop
    service: api
    command: bundle exec rubocop
    compose:
      run_options: [no-deps]

  console:
    description: Rails console
    service: api
    command: ./bin/rails console

  psql:
    description: Connect to PostgreSQL database
    service: db
    command: psql -U lexiforge -d lexiforge_development

  npm:
    description: Run NPM commands for frontend
    service: frontend
    command: npm
    compose:
      run_options: [no-deps]

  cypress:
    description: Run Cypress tests in headless mode
    service: cypress
    command: npm run cypress:run:headless
    compose:
      run_options: [no-deps]
      build: true

  cypress:open:
    description: Open Cypress Test Runner (requires X11 forwarding)
    service: cypress
    command: npm run cypress:open
    compose:
      run_options: [no-deps]
      build: true

  cypress:install:
    description: Install Cypress binary
    service: cypress
    command: npx cypress install
    compose:
      run_options: [no-deps]
      build: true

  bash:
    description: Open bash in API container
    service: api
    command: /bin/bash
    compose:
      run_options: [no-deps]

  sh:
    description: Open shell in API container
    service: api
    command: /bin/sh
    compose:
      run_options: [no-deps]

provision:
  - dip compose down --volumes
  - dip compose up -d db
  - sleep 10
  - dip bundle install
  - dip rails db:create db:migrate db:seed
  - dip npm install
